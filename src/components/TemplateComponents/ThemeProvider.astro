---
// Adapted from Starlight's Theme Provider: https://github.com/withastro/starlight/blob/main/packages/starlight/components/ThemeProvider.astro
import { Icon } from "astro-icon/components";
---

{/* This is intentionally inlined to avoid FOUC. */}
<script is:inline>
	window.StarlightThemeProvider = (() => {
		const storedTheme = typeof localStorage !== 'undefined' && localStorage.getItem('cs-theme');
		const theme =
			storedTheme ||
			(window.matchMedia('(prefers-color-scheme: light)').matches ? 'light' : 'dark');
		
		return {
			updatePickers(theme = storedTheme || 'auto') {
				document.querySelectorAll('cs-theme-select').forEach((picker) => {
					const select = picker.querySelector('select');
					if (select) select.value = theme;
					/** @type {HTMLTemplateElement | null} */
					const tmpl = document.querySelector(`#theme-icons`);
					const newIcon = tmpl && tmpl.content.querySelector('.' + theme);
					if (newIcon) {
						const oldIcon = picker.querySelector('svg.label-icon');
						if (oldIcon) {
							oldIcon.replaceChildren(...newIcon.cloneNode(true).childNodes);
						}
					}
				});
			},
			getPreferredColorScheme() {
				const storedTheme = typeof localStorage !== 'undefined' && localStorage.getItem('cs-theme');
				const theme =
					storedTheme ||
					(window.matchMedia('(prefers-color-scheme: light)').matches ? 'light' : 'dark');
				theme === 'light' || theme === "" ? document.body.classList.remove('dark-mode') : document.body.classList.add('dark-mode');;
			}
		};
	})();
</script>

<template id="theme-icons">
	<Icon name="mdi--sun" class="light" />
	<Icon name="mdi--moon" class="dark" />
	<Icon name="mdi--laptop" class="auto" />
</template>